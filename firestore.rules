rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // This rule allows anyone on the internet to view, edit, and delete
    // all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // your app will lose access to your Firestore database
    match /{document=**} {
      allow read, write: if request.time < timestamp.date(2020, 8, 10);
    }
  }
}

 // This rule allows anyone on the internet to view, edit, and delete
    // all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // your app will lose access to your Firestore database
    // match /{document=**} {
    //   allow read, write: if request.time < timestamp.date(2020, 8, 10);
    // }
//     match /boards/{boardId} {
//     	//only the user that created this board can write to it, anyone can read it
//       allow read, write: if request.auth != null;
//       //allow write: if canUserRead();
//       //allow anyone signed in to create a new board
//       allow create : if request.auth != null;
//       function canUserRead() {
//       	return exists(/databases/$(database)/documents/boards/$(boardId)/users/$(request.auth.uid));
//       }
      
//     }
    